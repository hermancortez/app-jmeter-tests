name: JMeter Performance Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  performance-test:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:20.10.7
        options: --privileged

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Start dummy app with Docker Compose
      run: |
        cd dummy-app
        docker compose up -d --build

    - name: Wait for the API to be ready
      run: |
        for i in {1..20}; do # Aumentar los intentos de espera
          if curl -s http://localhost:3000/api/ping | grep -q pong; then
            echo "API is up ✅"
            break
          fi
          echo "Waiting for API..."
          sleep 3 # Reducir el sleep para más intentos en el mismo tiempo
        done
        # Añadir una verificación de falla si la API no sube
        if ! curl -s http://localhost:3000/api/ping | grep -q pong; then
          echo "API did not come up after multiple attempts. Exiting."
          exit 1 # Fallar el workflow si la API no está lista
        fi

    - name: Verify API connectivity from another container # NUEVO PASO DE DEPURACIÓN DE CONECTIVIDAD
      run: |
        echo "Attempting to connect to dummy app from a temporary container..."
        # Usar un contenedor temporal para probar la conectividad a localhost:3000
        docker run --rm busybox:latest sh -c "nc -zv localhost 3000"
        echo "Connectivity test complete."

    - name: List JMX files for debugging
      run: |
        echo "Listing files in jmeter directory:"
        ls -l jmeter/

    - name: Run JMeter test
      run: |
        docker run --rm \
          -v ${{ github.workspace }}/jmeter:/tests \
          -w /tests \
          justb4/jmeter \
          -n -t "thread-group.jmx" \
          -l results.jtl \
          -e -o report

    - name: Upload HTML Report
      uses: actions/upload-artifact@v4
      with:
        name: jmeter-html-report
        path: jmeter/report